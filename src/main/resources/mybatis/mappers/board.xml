<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
    <insert id="register" parameterType="SpringBoard">
        insert into SPRINGBOARD(bno, title, content, ip, email)
        values (BOARDSEQ.nextval, #{title}, #{content}, #{ip}, #{email})
    </insert>
    <select id="detail" resultType="SpringBoard" parameterType="java.lang.Integer">
        select BNO, title, content, u.EMAIL, ip, NICKNAME, REGDATE, UPDATEDATE
        from SPRINGUSER u, SPRINGBOARD b
        where u.EMAIL = b.EMAIL and b.BNO = #{bno}
    </select>
    <update id="updateReadcnt" parameterType="java.lang.Integer">
        update springboard
        set readcnt = readcnt + 1
        where bno = #{bno}
    </update>
    <update id="update" parameterType="SpringBoard">
        update springboard
        set title=#{title}, content=#{content},
        ip=#{ip}, updatedate=sysdate
        where bno = #{bno}
    </update>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from springboard
        where bno = #{bno}
    </delete>
    <select id="totalCount" resultType="java.lang.Integer">
        select count(*) from SPRINGBOARD, SPRINGUSER
        <include refid="search" />
    </select>
    <select id="list" resultType="SpringBoard" parameterType="SearchCriteria">
        select bno, TITLE, EMAIL, NICKNAME, REGDATE, READCNT
        from (
            select rownum rnum, BNO, TITLE, CONTENT, EMAIL, REGDATE, READCNT, NICKNAME
            from (
                select rownum, BNO, TITLE, CONTENT, SPRINGBOARD.EMAIL, REGDATE, READCNT, NICKNAME
                from SPRINGBOARD, SPRINGUSER
                <include refid="search" />
                order by REGDATE desc
            )
        )
        where rnum &lt;= #{pageStart} + #{perPageNum} - 1 and rnum &gt;= #{pageStart}
    </select>
    <select id="replycnt" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from SPRINGREPLY where BNO=#{bno}
    </select>
    <sql id="search">
        <if test="searchType!=null">
            <if test="searchType == ''.toString()"> where SPRINGBOARD.email = SPRINGUSER.email </if>
            <if test="searchType == 't'.toString()"> where SPRINGBOARD.email = SPRINGUSER.email and title like '%' || #{keyword} || '%' </if>
            <if test="searchType == 'c'.toString()"> where SPRINGBOARD.email = SPRINGUSER.email and content like '%' || #{keyword} || '%' </if>
            <if test="searchType == 'w'.toString()"> where SPRINGBOARD.email = SPRINGUSER.email and springuser.nickname like '%' || #{keyword} || '%' </if>
            <if test="searchType == 'tc'.toString()"> where SPRINGBOARD.email = SPRINGUSER.email and (title like '%' || #{keyword} || '%' OR content like '%' || #{keyword} || '%' )</if>
            <if test="searchType == 'cw'.toString()"> where SPRINGBOARD.email = SPRINGUSER.email and (content like '%' || #{keyword} || '%' OR springuser.nickname like '%' || #{keyword} || '%' )</if>
        </if>
        <if test="searchType == null">
            where SPRINGBOARD.email = SPRINGUSER.email
        </if>
    </sql>
</mapper>