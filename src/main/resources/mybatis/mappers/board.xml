<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
    <insert id="register" parameterType="SpringBoard">
        insert into springboard(title, content, ip, email)
        values (#{title}, #{content}, #{ip}, #{email})
    </insert>
    <select id="detail" resultType="SpringBoard" parameterType="java.lang.Integer">
        select bno, title, content, u.email, ip, nickname, regdate, updatedate
        from springuser u, springboard b
        where u.email = b.email and b.bno = #{bno}
    </select>
    <update id="updateReadcnt" parameterType="java.lang.Integer">
        update springboard
        set readcnt = readcnt + 1
        where bno = #{bno}
    </update>
    <update id="update" parameterType="SpringBoard">
        update springboard
        set title=#{title}, content=#{content}, ip=#{ip}, updatedate=sysdate
        where bno = #{bno}
    </update>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from springboard
        where bno = #{bno}
    </delete>
    <select id="totalCount" resultType="java.lang.Integer">
        select count(*) from springboard, springuser
        <include refid="search" />
    </select>
    <select id="list" resultType="SpringBoard" parameterType="SearchCriteria">
        with table2
        as (
            with table1
            as (
                select row_number() over ( order by regdate desc )as rnum, bno, title, content, springboard.email, regdate, readcnt, nickname
                from springboard, springuser
                <include refid="search" />
            )
            select rnum, bno, title, content, email, regdate, readcnt, nickname
            from table1
        )
        select bno, title, email, nickname, regdate, readcnt
        from
            table2
        where rnum &lt;= #{pageStart} + #{perPageNum} - 1 and rnum &gt;= #{pageStart}
    </select>
    <select id="replycnt" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from springreply where bno=#{bno}
    </select>
    <sql id="search">
        <if test="searchType!=null">
            <if test="searchType == ''.toString()"> where springboard.email = springuser.email </if>
            <if test="searchType == 't'.toString()"> where springuser.email = springboard.email and title like '%' || #{keyword} || '%' </if>
            <if test="searchType == 'c'.toString()"> where springuser.email = springboard.email and content like '%' || #{keyword} || '%' </if>
            <if test="searchType == 'w'.toString()"> where springuser.email = springboard.email and springuser.nickname like '%' || #{keyword} || '%' </if>
            <if test="searchType == 'tc'.toString()"> where springuser.email = springboard.email and (title like '%' || #{keyword} || '%' OR content like '%' || #{keyword} || '%' )</if>
            <if test="searchType == 'cw'.toString()"> where springuser.email = springboard.email and (content like '%' || #{keyword} || '%' OR springuser.nickname like '%' || #{keyword} || '%' )</if>
        </if>
        <if test="searchType == null">
            where springboard.email = springuser.email
        </if>
    </sql>
</mapper>